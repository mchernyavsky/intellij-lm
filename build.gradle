buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath "com.github.hurricup:gradle-grammar-kit-plugin:2017.1.1"
        classpath "gradle.plugin.org.jetbrains:gradle-intellij-plugin:0.1.10"
    }
}

plugins {
    id 'org.jetbrains.intellij' version '0.2.5'
    id 'org.jetbrains.kotlin.jvm' version '1.1.4'
}

import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

apply plugin: 'idea'
idea {
    module {
        generatedSourceDirs += file('src/gen')
    }
}

apply plugin: 'org.jetbrains.intellij'
intellij {
    version ideaVersion
    updateSinceUntilBuild = false
    instrumentCode = false
}

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

compileKotlin {
    kotlinOptions {
        languageVersion = '1.1'
        apiVersion = '1.1'
    }
}

tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }
sourceSets {
    main {
        java.srcDirs += 'src/gen'
    }
}

apply plugin: 'org.jetbrains.grammarkit'
grammarKit {
    grammarKitRelease = '1.5.2'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly('com.github.JetBrains:Grammar-Kit:34fd65b92af957c25d940b828d81ab3ba9b398b0') {
        exclude group: 'org.jetbrains.plugins'
        exclude module: 'idea'
    }
    testCompile 'junit:junit:4.+'
    testCompile 'org.assertj:assertj-core:3.2.0'
}

task generateLmLexer(type: GenerateLexer) {
    source 'src/main/grammars/LmLexer.flex'
    targetDir 'src/gen/org/lm/lang/lexer'
    targetClass '_LmLexer'
    purgeOldFiles = true
}

task generateLmParser(type: GenerateParser) {
    source 'src/main/grammars/LmParser.bnf'
    targetRoot = 'src/gen'
    pathToParser '/org/lm/lang/parser/LmParser.java'
    pathToPsiRoot '/org/lm/psi'
    purgeOldFiles = true
}

compileKotlin.dependsOn generateLmLexer, generateLmParser
compileTestKotlin.dependsOn generateLmLexer, generateLmParser

task wrapper(type: Wrapper) {
    gradleVersion = '4.3'
}
